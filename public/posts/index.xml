<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Posts on blog.codybunch.com - The random msuings of an IT guy </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://blog.codybunch.com/posts/index.xml</link>
    
    
    
    <updated>Wed, 07 Jan 2015 00:00:00 UTC</updated>
    
    <item>
      <title>On OpenStack 2015 Board Elections</title>
      <link>http://blog.codybunch.com/posts/2015-01-07-On-OpenStack-2015-Board-Elections</link>
      <pubDate>Wed, 07 Jan 2015 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2015-01-07-On-OpenStack-2015-Board-Elections</guid>
      <description>&lt;p&gt;Sometime back in November, I received an email stating that I had been nominated, by the OpenStack community, to run for an Individual Board Member position. It was very shortly thereafter I had the 10 needed nominations to get on the ballot. I was super excited at the prospect, and am super humbled that I&amp;rsquo;d even be considered.&lt;/p&gt;

&lt;p&gt;Let me say that again. I am incredibly humbled that the community reached out and hopped on to support my nomination.&lt;/p&gt;

&lt;p&gt;I repeat that, because at this time, I&amp;rsquo;m deciding to back out of the election for two reasons. First and foremost, family considerations. Due to unforeseen family circumstances, I need to take a few steps back from the various things I am involved in for a while.&lt;/p&gt;

&lt;p&gt;My second reason for backing out, is the entry of &lt;a href=&#34;http://www.openstack.org/community/members/profile/3106&#34;&gt;Egle&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/eglute&#34;&gt;@eglute&lt;/a&gt; | &lt;a href=&#34;http://anystacker.com/&#34;&gt;AnyStacker&lt;/a&gt;) into the elections. Having worked closely with Egle on a number of workshops, books, and work projects over the last few years, I can say that y&amp;rsquo;all will be in great hands if she&amp;rsquo;s elected.&lt;/p&gt;

&lt;p&gt;Thank you again for your all your support. Mayhaps next time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unbreak Email in 2015: 3 folders, 2 times a day, 1 rule</title>
      <link>http://blog.codybunch.com/posts/2014-12-30-Unbreak-Email-3-folders-2-times-a-day-1-rule</link>
      <pubDate>Tue, 30 Dec 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-12-30-Unbreak-Email-3-folders-2-times-a-day-1-rule</guid>
      <description>

&lt;p&gt;With the new year upon us, a lot of you will likely make some manner of commitment to be better at handling communications, process email, and in general, get things done.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a system I&amp;rsquo;ve built / adapted from others who are much more effective at email than I am. The system in general has helped reduce stress and help me focus on and engage better with the parts of email that matter. Because I am lazy, it&amp;rsquo;s also super simple and automated to a degree. I am not prescribing this as a fix to all of your email woes, rather, suggesting that like me, you read, learn, and adapt it to help improve how you handle email next year. (&lt;em&gt;ZOMG RUNON&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s got some basic components, and because lists are a good SEO / Click-Bait thing, that&amp;rsquo;s how we&amp;rsquo;ll arrange it:&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;Unbreak Email&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;3 Folders&lt;/li&gt;
&lt;li&gt;2 Times a day&lt;/li&gt;
&lt;li&gt;1 Processing Rule&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;3 Folders&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s actually two for processing and one for storing reference material. These folders are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-&amp;gt; Inbox
|-&amp;gt; I&#39;m Awesome
|-&amp;gt; Done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The basic workflow is that everything lands in the inbox, and gets processed into either the &amp;ldquo;I&amp;rsquo;m Awesome&amp;rdquo; (or Kudos, etc) folder or into the Done folder.&lt;/p&gt;

&lt;p&gt;What is this &amp;ldquo;I&amp;rsquo;m Awesome&amp;rdquo; folder? It actually serves a few needs.&lt;/p&gt;

&lt;p&gt;First and foremost it&amp;rsquo;s a tool to be used around review time. That is, you take any email where someone thanks you for a job well done, a contribution to a project, and other similar things, and place them here. If you do self-reviews, retrospectives, or other similar management things, it is handy to have this as a reminder of the contributions you&amp;rsquo;ve made over that time period, and if need be, remind &lt;em&gt;The Man™&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Second, and no less important, is this folders ability to recharge your batteries. If you start to experience burn out, feel like you aren&amp;rsquo;t having an impact, and other similar feelings, looking back at this folder should remind you a bit about why you do what you do.&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;2 Times A Day&lt;/h2&gt;

&lt;p&gt;I generally check email twice a day. That is, across all accounts (gmail, provmware, work, etc). Twice a day.&lt;/p&gt;

&lt;p&gt;This isn&amp;rsquo;t a hard and fast rule. That is, emergencies and other high priority things happen in life that necessitate checking with more frequency.&lt;/p&gt;

&lt;p&gt;For things like collaboration, team communication, social, and more, there are more and better, near instant forms of communication.&lt;/p&gt;

&lt;p&gt;During these processing times, process the &amp;ldquo;Inbox&amp;rdquo; folder first, as this contains everything that is addressed to me, or needs input. Giving these priority let&amp;rsquo;s you address the 20% of email that needs 80% of your attention.&lt;/p&gt;

&lt;p&gt;Next, process the &amp;ldquo;Done&amp;rdquo; folder which will contain mostly automated emails and email list mails. In this case, the &amp;ldquo;One Rule&amp;rdquo; discussed next puts anything and everything that is not addressed directly to you into the Done folder. This is because in the majority of circumstances, mail coming to an email list or from an automated source is informative, but not of major consequence if missed or filed as &amp;ldquo;Done&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;As these emails in this folder are largely informative in nature, skimming them has worked well for me. Skimming strategies however, are best left for another post (or some manner of productivity expert).&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;1 Email Rule&lt;/h2&gt;

&lt;p&gt;The 1 rule to rule them all that I use to support all of the above:&lt;/p&gt;

&lt;p&gt;&amp;ldquo;On incoming mail, where I am not in the TO: or CC: field, move to &amp;lsquo;Done&amp;rsquo;&amp;ldquo;.&lt;/p&gt;

&lt;p&gt;This enables the bits above, and in one fell swoop, will reduce your load significantly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Holiday Zen Moments</title>
      <link>http://blog.codybunch.com/posts/2014-12-26-Holiday-Zen-Moments</link>
      <pubDate>Fri, 26 Dec 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-12-26-Holiday-Zen-Moments</guid>
      <description>&lt;p&gt;Apologies in advance if this is a bit more personal than technical. There is plenty more tech content coming, have no fear.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/iT7TOPI.jpg&#34; alt=&#34;I ride because I ride&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s the holidays WOOOOO! Well, maybe no seven O&amp;rsquo;s woo, but still, a good time nevertheless. On the Zen moments thing, about 6 years ago, my father told me &lt;a href=&#34;http://commuteorlando.com/wordpress/2009/02/03/a-zen-master-asks-why-ride-a-bicycle/&#34;&gt;this story&lt;/a&gt;, and designed the sticker you see above.&lt;/p&gt;

&lt;p&gt;The story:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Five students of a Zen master was back from the market on their bicycles. As they dismounted, their master asked: &amp;ldquo;Why are you riding your bicycles?”&lt;/p&gt;

&lt;p&gt;Each of them came up with different answers to their master’s query.&lt;/p&gt;

&lt;p&gt;The first student said: “It is the bicycle that is carrying the sack of potatoes. I am glad that my back has escaped the pain of bearing the weight.”&lt;/p&gt;

&lt;p&gt;The master was glad and said: ”You are a smart boy. When you become old you will be saved of a hunch back unlike me.”&lt;/p&gt;

&lt;p&gt;The second student had a different answer: ”I love to have my eyes over the trees and the sprawling fields as I go riding.”&lt;/p&gt;

&lt;p&gt;The teacher commended: “You have your eyes open and you see the world.”&lt;/p&gt;

&lt;p&gt;The third disciple came up with yet a different answer: ”When I ride I am content to chant ‘nam myoho renge kyo’”&lt;/p&gt;

&lt;p&gt;The master spoke words of appreciation: ”Your mind will roll with ease like a newly trued wheel.”&lt;/p&gt;

&lt;p&gt;The fourth disciple said: “Riding my bicycle I live in perfect harmony of things.”&lt;/p&gt;

&lt;p&gt;The pleased master said: ”You are actually riding the golden path of non-harming or non violence.”&lt;/p&gt;

&lt;p&gt;The fifth student said: ”I ride my bicycle to ride my bicycle.”&lt;/p&gt;

&lt;p&gt;The master walked up to him and sat at his feet and said: “I am your disciple!”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Having ridden a bicycle for a number of years, I have used it for various means and in various phases. Weight-loss, transportation, racing, harmony with nature, etc. However, over the last several years through varied events, dramas and the like, I have learned that in cycling: &amp;ldquo;I ride because I ride&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;During the holidays, one can get caught up in the presents, people, dramas, and the ever present exhaustion of well, the holidays. Over the years, I&amp;rsquo;ve been in all of the above situations and then some. This year, like in cycling, I am trying to &amp;ldquo;Holidays because I Holidays&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Regardless of how, what, or why you get together this season, try to take a moment, sit back and enjoy them as much as you can.&lt;/p&gt;

&lt;p&gt;If you also ride because you ride, and would like a sticker, either email me (bunchc at gmail) or ping me on twitter and we can arrange something.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Live Blog - Keystone to Keystone Federation</title>
      <link>http://blog.codybunch.com/posts/2014-11-05-Live-Blog---Keystone-to-Keystone-Federation</link>
      <pubDate>Wed, 05 Nov 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-11-05-Live-Blog---Keystone-to-Keystone-Federation</guid>
      <description>

&lt;p&gt;Session details &lt;a href=&#34;https://openstacksummitnovember2014paris.sched.org/event/f7207fef7547319f322fa5cfee05cf49&#34;&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Speakers:
- Marek Denis - Research Fellow, CERN
- Steve Martinelli - Software Developer, IBM
- Joe Savak Sr. - Product Manager, Rackspace
- Brad Topol - Distinguished Engineer, IBM&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In this presentation, we describe the federated identity enhancements we have added to support Keystone to Keystone federation for enabling hybrid cloud functionality. We begin with an overview of key hybrid cloud use cases that have been identified by our stakeholders including those being encountered by OpenStack superuser CERN. We then discuss our SAML based approach for enabling Keystones to trust each other and provide authorization and  role support for resources in hybrid cloud environments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Live Blog&lt;/h2&gt;

&lt;p&gt;Lots of different folks interested in identity federtion, Academia, companies, lots and lots of folks.&lt;/p&gt;

&lt;p&gt;Use cases? - Easy to confiture, cloud bursting, central policy point, federating out, federating in. Keep the client small. No new protocols.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Federate In&amp;rdquo; - You already have identity provider, SAML, etc Folks already have SSO / Identity. Federate allows for use of existing credentials to work with OpenStack MSP&amp;rsquo;s.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Federate Out&amp;rdquo; - That is, you setup a trust between on prem and off prem clouds.&lt;/p&gt;

&lt;p&gt;Cern&amp;rsquo;s Use-Case&lt;/p&gt;

&lt;p&gt;Cern has 70,000 cores, they need more to process ALL the data they produce. This requires federation out allows folks to use pay-as-you-go to hire out additional resources as needed.&lt;/p&gt;

&lt;p&gt;Cern also needs to be able to allow folks to federate in from others in science community.&lt;/p&gt;

&lt;p&gt;Now an interlude for Keystone classic Auth.&lt;/p&gt;

&lt;p&gt;Federated identity in Incehouse - Integrate existing tools, SAML, etc. There is a diagram, it has lots of arrows, the gist is you send SAML to keystone, keystone gives you a token, and things are good. This worked, but not as well as it could. Mapping engine, that is, groups in one system are not the same as groups in others. Woo Mapping: &amp;ldquo;IBM Regular Employees&amp;rdquo; &amp;ndash;&amp;gt; &amp;ldquo;regular_canada&amp;rdquo; etc.&lt;/p&gt;

&lt;p&gt;New diagram for Federation in Juno. A lot more arrows. This time around, Keystone is the provider, and will provide some level of attestation to the other Keystone in the trust relationship. Once the trust is in place, the user passes the token to either.&lt;/p&gt;

&lt;p&gt;The SAML generator takes the token and goes backwards. Token &amp;ndash;&amp;gt; SAML Generator &amp;ndash;&amp;gt; SAML Assertion&lt;/p&gt;

&lt;p&gt;Now we&amp;rsquo;re at a slide covering all manner of config data. Important bits: Mapping is still a thing. You also need to &amp;lsquo;prime&amp;rsquo; the SAML assertion pump.&lt;/p&gt;

&lt;p&gt;keystone-manage now has a metadata generation thing.&lt;/p&gt;

&lt;p&gt;Back to Cern: - 2 datacenters, OpenStack Cells, Cells not popular. 40k users in AD, and 12k more ADFS (Federation). Cern uses SAML2, and will be the first OpenStack in the world to allow federate-in to allow external entities to consume their resources.&lt;/p&gt;

&lt;p&gt;Patches to the OpenStack and Keystone clients.&lt;/p&gt;

&lt;p&gt;Looking forward:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Auth-N&lt;/li&gt;
&lt;li&gt;Horizon Integration&lt;/li&gt;
&lt;li&gt;More &amp;amp; Better Mapping&lt;/li&gt;
&lt;li&gt;Fine Grained ACLs&lt;/li&gt;
&lt;li&gt;More protocols&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Live Blog - Cloud Security: Do you know where your workloads are running?</title>
      <link>http://blog.codybunch.com/posts/2014-11-05-Live-Blog---Cloud-Security-Do-you-know-where-your-workloads-are-running</link>
      <pubDate>Wed, 05 Nov 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-11-05-Live-Blog---Cloud-Security-Do-you-know-where-your-workloads-are-running</guid>
      <description>

&lt;p&gt;Session background can be found &lt;a href=&#34;https://openstacksummitnovember2014paris.sched.org/event/98e55a657e2e78e8beacaaacde714a0f&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Speaker: Raghu Yeluri, Intel Corporation&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As an Enterprise and/or a Cloud service provider, you would have to ensure that all regulatory requirements for workload and data sovereignty are met.   You have to answer the questions from your customers like:&lt;/p&gt;

&lt;p&gt;where is my workload running? ,  Are my workloads running in a compliant location? ,  How can I trust the Integrity of the host servers on which my workloads are running , can you prove to me that my workloads and data have not violated policies? , How can I control via policy where my workload can and cannot migrate and run .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Live Blog&lt;/h2&gt;

&lt;p&gt;Geo Tag / Asset tags are set in a write once area. Can be almost anything, user provided names, gps coordinates, actual asset tags, and importantly, the certificate of attestation from the TPM.&lt;/p&gt;

&lt;p&gt;Today we&amp;rsquo;re using Glance Image Registry to set the launch properties / policies: e.g. Only runs in France. The &amp;ldquo;Trust and Launch&amp;rdquo; scheduler filter runs last against the list of servers left. It then runs a variant of Open Attestation to say, &amp;ldquo;Which are trusted?&amp;rdquo;. From there, the scheduler will deploy. This is all automatic. Only setting the tags is manual. This same attestation happens during migrations as well.&lt;/p&gt;

&lt;p&gt;This is how we enable boundary control. We added Horizon plugins to support launch policies. Extended Nova scheduler for location filtering, and glance for policies. Finally we provide a number of tools that work in conjunction (OAT, etc). The end-to-end bits can be done entirely in OSS however.&lt;/p&gt;

&lt;p&gt;This should be upstream in Kilo, however, we (Intel) provide scripts to make this work in Icehouse &amp;amp; Juno.&lt;/p&gt;

&lt;p&gt;Live Demo - Lol WiFi!&lt;/p&gt;

&lt;p&gt;There is no maximum number of tags that can be set, things like GEO, PCI-DSS, etc can be set, these are then used to select the servers from there.&lt;/p&gt;

&lt;p&gt;Magic number of policies: 5. This was in conversation with NIST and MSP&amp;rsquo;s&lt;/p&gt;

&lt;p&gt;Looking forward:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extend geo-tagging for volumes&lt;/li&gt;
&lt;li&gt;Tenant-controlled encryption / decryption under controlled circumstances&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Extend geo-tagging for volumes - Basically the above but for Cinder. The scheduler is pluggable, so we should be able to make this happen. The assumption being x86 storage host. This will be more difficult with traditional SAN/NAS due to not being TXT enabled&amp;hellip; &lt;em&gt;yet&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Paris Summit - Day 2</title>
      <link>http://blog.codybunch.com/posts/2014-11-04-Paris-Summit---Day-2</link>
      <pubDate>Tue, 04 Nov 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-11-04-Paris-Summit---Day-2</guid>
      <description>

&lt;p&gt;Day number 2, Day number 2! He touched the cloud!&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;#vBrownBag Day 2&lt;/h2&gt;

&lt;p&gt;Day number 2 had a number of awesome #vBrownBag tech talks, one can find that playlist &lt;a href=&#34;https://www.youtube.com/channel/UCaZf13iWhwnBdpIkrEmHLbA&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;ZeroVM Sessions&lt;/h2&gt;

&lt;p&gt;We had a mini track going yesterday afternoon starting at 3:40 with &lt;a href=&#34;http://cczona.com/&#34;&gt;Carina C. Zona&lt;/a&gt; kicking it off with &amp;ldquo;Good, Fast, Cheap: Pick 3&amp;rdquo;. The 4:40 session right on the heels was a 90minute hands on workshop with ZeroCloud, or that sweet spot where ZeroVM meets OpenStack Swift. The recordings / slides for these are not yet available however. If you would like to try your hands at the workshop, you should be able to with the info from &lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-29-Paris-Summit-Preparation/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Other notes from Day 2&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ZOMG The food in Paris.&lt;/li&gt;
&lt;li&gt;ZOMG The deserts in Paris.&lt;/li&gt;
&lt;li&gt;If the waiter tells you no, he means it.&lt;/li&gt;
&lt;li&gt;Sausage that says &amp;lt;&lt;AAAAA&gt;&amp;gt; is not your friend.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>OpenStack Cookbook - Now on Juno</title>
      <link>http://blog.codybunch.com/posts/2014-11-04-OpenStack-Cookbook---Now-on-Juno</link>
      <pubDate>Tue, 04 Nov 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-11-04-OpenStack-Cookbook---Now-on-Juno</guid>
      <description>&lt;p&gt;With the summit this week, I feel it&amp;rsquo;s appropriate to announce that the &lt;a href=&#34;https://github.com/openstackcookbook/openstackcookbook/tree/juno&#34;&gt;scripts supporting the OpenStack Cookbook&lt;/a&gt; have been updated (and are mostly functional) on OpenStack Juno.&lt;/p&gt;

&lt;p&gt;To get started with them, you&amp;rsquo;ll need either VMware Workstation/Fusion or Virtualbox, Vagrant, and Git.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/openstackcookbook/openstackcookbook -b juno
cd openstackcookbook
vagrant up
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These scripts will be updated and expanded once again as we being writing on the third edition of the OpenStack Cookbook.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Clone all the USB keys! - Method 3</title>
      <link>http://blog.codybunch.com/posts/2014-11-03-Clone-all-the-USB-keys---Method-3</link>
      <pubDate>Mon, 03 Nov 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-11-03-Clone-all-the-USB-keys---Method-3</guid>
      <description>&lt;p&gt;Method 3 you ask? Wel, sure, I &lt;a href=&#34;http://openstack.prov12n.com/usb-key-duplication-on-osx-on-the-cheap/&#34;&gt;wrote on this around&lt;/a&gt; the time of OSCON earlier this year. However, for the OpenStack in Paris, we needed a larger axe. Thanks to &lt;a href=&#34;https://twitter.com/larsbutler&#34;&gt;Lars&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/cloudnull&#34;&gt;Mr. Cloud Null&lt;/a&gt;, we managed to apply the appropriate amount of strategic violence:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat ~/fuckshitup.sh
#!/bin/bash
set -e -o -v

for i in `jot 19 3`;
    do sudo diskutil erasedisk FAT32 PARIS /dev/disk${i}
done

for i in `jot 19 3`;
    do sudo diskutil partitionDisk /dev/disk${i} MBR MS-DOS PARIS 0b
done

for i in `jot 19 3`;
    do rsync --progress -az /Volumes/PARIS &amp;quot;/Volumes/PARIS $i/&amp;quot; &amp;amp;
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First it formats all the disks, then it rsyncs all the things.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Paris Summit - Day 1</title>
      <link>http://blog.codybunch.com/posts/2014-11-03-Paris-Summit---Day-1</link>
      <pubDate>Mon, 03 Nov 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-11-03-Paris-Summit---Day-1</guid>
      <description>&lt;p&gt;Hooray Paris!&lt;/p&gt;

&lt;p&gt;Well, maybe. Having only seen the inside of the conference center and hotel lobby of the hotel nextdoor, I didn&amp;rsquo;t get to do much summiting today. Rather, the day was spent prepping for tomorrows workshop.&lt;/p&gt;

&lt;p&gt;I do hear that the #vBrownBags are doing extremely well with 19 individual sessions recorded (and streamed?) today, and a &lt;a href=&#34;http://openstack.prov12n.com/vbrownbag-techtalk-schedule-at-openstack-summit-paris-2/&#34;&gt;full schedule&lt;/a&gt; of 100-ish more this week.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OpenStack Book Discounts During Summit</title>
      <link>http://blog.codybunch.com/posts/2014-10-31-OpenStack-Book-Discounts-During-Summit</link>
      <pubDate>Fri, 31 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-10-31-OpenStack-Book-Discounts-During-Summit</guid>
      <description>

&lt;p&gt;Starting now and running the week of the summit, the two best selling OpenStack books will be on super sale:&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;OpenStack Cookbook&lt;/h2&gt;

&lt;p&gt;Book : nieX72Mn7U&lt;/p&gt;

&lt;p&gt;eBook: k1QxrwyMvD&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Learning OpenStack Networking (Neutron)&lt;/h2&gt;

&lt;p&gt;Book : luyLRpSQ&lt;/p&gt;

&lt;p&gt;eBook: IXQ1swn2&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Paris Summit Preparation</title>
      <link>http://blog.codybunch.com/posts/2014-10-29-Paris-Summit-Preparation</link>
      <pubDate>Wed, 29 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-10-29-Paris-Summit-Preparation</guid>
      <description>&lt;p&gt;As you might have guessed from the large number of ZeroVM posts recently, that something was up. If you are going to be at the OpenStack Summit in Paris, there will be a ZeroVM workshop given by my coworkers &lt;a href=&#34;https://twitter.com/eglute&#34;&gt;Egle&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/larsbutler&#34;&gt;Lars&lt;/a&gt;, and I.&lt;/p&gt;

&lt;p&gt;This session will be a 90-minute, into the deep end, building applications to work with ZeroVM.&lt;/p&gt;

&lt;p&gt;The materials, if you want to play along at home, can be found here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://4d01a92196a72e3b4215-657ddb0c96a24057e840f50c14fc13dd.ssl.cf1.rackcdn.com/ZeroCloud_Demo-07.ova&#34;&gt;The ZeroCloud Appliance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.zerovm.org/zerocloud/snakebin/snakebin.html&#34;&gt;The Online copy of the workshop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Still missing are the slides and video which I will update the post with after the show. See you in Paris.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Packer to Make Vagrant Boxes</title>
      <link>http://blog.codybunch.com/posts/2014-10-28-Using-Packer-to-Make-Vagrant-Boxes</link>
      <pubDate>Tue, 28 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-10-28-Using-Packer-to-Make-Vagrant-Boxes</guid>
      <description>

&lt;p&gt;Part of working on the 3rd edition of the OpenStack Cookbook required, among other things, a new release of Ubuntu that came pre-loaded with the Juno OpenStack packages. Not a problem! Excepting that there were no ready made images on &lt;a href=&#34;http://vagrantcloud.com&#34;&gt;Vagrant Cloud&lt;/a&gt;. Enter Packer.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Packer?&lt;/h2&gt;

&lt;p&gt;What the deuce is packer? From the &lt;a href=&#34;https://packer.io/&#34;&gt;packer.io&lt;/a&gt; site:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Said another way, it takes the &amp;lsquo;configuration is code&amp;rsquo; and pushes it back to the golden images, to a degree. The idea is one can shrink the time to deploy if instead of starting with the most generic box and adding, you start somewhere in the middle, adding common things to a &amp;lsquo;golden&amp;rsquo; image, and then deploying on top of that.&lt;/p&gt;

&lt;p&gt;In the use-case for the OpenStack Cookbook? Well, we just needed a manila Ubuntu 14.10 box for Fusion and Virtualbox. As there are three of us on the project now, having a common starting ground is ideal.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Our Packer Setup&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ll leave installing Packer as an exercise for the reader. The &lt;a href=&#34;https://packer.io/docs&#34;&gt;docs&lt;/a&gt; are pretty good in the regard.&lt;/p&gt;

&lt;p&gt;For our build, we use the following packer.json:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;builders&amp;quot;: [
    {&amp;quot;type&amp;quot;: &amp;quot;virtualbox-iso&amp;quot;,
    &amp;quot;guest_os_type&amp;quot;: &amp;quot;Ubuntu_64&amp;quot;,
    &amp;quot;iso_url&amp;quot;: &amp;quot;http://mirror.anl.gov/pub/ubuntu-iso/CDs/utopic/ubuntu-14.10-server-amd64.iso&amp;quot;,
    &amp;quot;iso_checksum&amp;quot;: &amp;quot;91bd1cfba65417bfa04567e4f64b5c55&amp;quot;,
    &amp;quot;iso_checksum_type&amp;quot;:&amp;quot;md5&amp;quot;,
    &amp;quot;http_directory&amp;quot;: &amp;quot;preseed&amp;quot;,
    &amp;quot;ssh_username&amp;quot;: &amp;quot;vagrant&amp;quot;,
    &amp;quot;ssh_password&amp;quot;: &amp;quot;vagrant&amp;quot;,
    &amp;quot;boot_wait&amp;quot;:&amp;quot;5s&amp;quot;,
    &amp;quot;output_directory&amp;quot;: &amp;quot;ubuntu64_basebox_virtualbox&amp;quot;,
    &amp;quot;shutdown_command&amp;quot;: &amp;quot;echo &#39;shutdown -P now&#39; &amp;gt; shutdown.sh; echo &#39;vagrant&#39;|sudo -S sh &#39;shutdown.sh&#39;&amp;quot;,
    &amp;quot;boot_command&amp;quot;: [
      &amp;quot;&amp;lt;esc&amp;gt;&amp;lt;esc&amp;gt;&amp;lt;enter&amp;gt;&amp;lt;wait&amp;gt;&amp;quot;,
      &amp;quot;/install/vmlinuz noapic &amp;quot;,
      &amp;quot;ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg &amp;quot;,
      &amp;quot;debian-installer=en_US auto locale=en_US kbd-chooser/method=us &amp;quot;,
      &amp;quot;hostname={{ .Name }} &amp;quot;,
      &amp;quot;fb=false debconf/frontend=noninteractive &amp;quot;,
      &amp;quot;keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA &amp;quot;,
      &amp;quot;keyboard-configuration/variant=USA console-setup/ask_detect=false &amp;quot;,
      &amp;quot;initrd=/install/initrd.gz -- &amp;quot;,
      &amp;quot;&amp;lt;enter&amp;gt;&amp;quot;]
    },
    {&amp;quot;type&amp;quot;: &amp;quot;vmware-iso&amp;quot;,
    &amp;quot;guest_os_type&amp;quot;: &amp;quot;ubuntu-64&amp;quot;,
    &amp;quot;iso_url&amp;quot;: &amp;quot;http://mirror.anl.gov/pub/ubuntu-iso/CDs/utopic/ubuntu-14.10-server-amd64.iso&amp;quot;,
    &amp;quot;iso_checksum&amp;quot;: &amp;quot;91bd1cfba65417bfa04567e4f64b5c55&amp;quot;,
    &amp;quot;iso_checksum_type&amp;quot;:&amp;quot;md5&amp;quot;,
    &amp;quot;http_directory&amp;quot;: &amp;quot;preseed&amp;quot;,
    &amp;quot;ssh_username&amp;quot;: &amp;quot;vagrant&amp;quot;,
    &amp;quot;ssh_password&amp;quot;: &amp;quot;vagrant&amp;quot;,
    &amp;quot;boot_wait&amp;quot;:&amp;quot;5s&amp;quot;,
    &amp;quot;output_directory&amp;quot;: &amp;quot;ubuntu64_basebox_vmware&amp;quot;,
    &amp;quot;shutdown_command&amp;quot;: &amp;quot;echo &#39;shutdown -P now&#39; &amp;gt; shutdown.sh; echo &#39;vagrant&#39;|sudo -S sh &#39;shutdown.sh&#39;&amp;quot;,
    &amp;quot;boot_command&amp;quot;: [
      &amp;quot;&amp;lt;esc&amp;gt;&amp;lt;esc&amp;gt;&amp;lt;enter&amp;gt;&amp;lt;wait&amp;gt;&amp;quot;,
      &amp;quot;/install/vmlinuz noapic &amp;quot;,
      &amp;quot;ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg &amp;quot;,
      &amp;quot;debian-installer=en_US auto locale=en_US kbd-chooser/method=us &amp;quot;,
      &amp;quot;hostname={{ .Name }} &amp;quot;,
      &amp;quot;fb=false debconf/frontend=noninteractive &amp;quot;,
      &amp;quot;keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA &amp;quot;,
      &amp;quot;keyboard-configuration/variant=USA console-setup/ask_detect=false &amp;quot;,
      &amp;quot;initrd=/install/initrd.gz -- &amp;quot;,
      &amp;quot;&amp;lt;enter&amp;gt;&amp;quot;]
    }],
  &amp;quot;provisioners&amp;quot;: [{
    &amp;quot;type&amp;quot;: &amp;quot;shell&amp;quot;,
    &amp;quot;execute_command&amp;quot;: &amp;quot;echo &#39;vagrant&#39; | sudo -S sh &#39;{{ .Path }}&#39;&amp;quot;,
    &amp;quot;inline&amp;quot;: [
      &amp;quot;apt-get update -y&amp;quot;,
      &amp;quot;apt-get install -y linux-headers-$(uname -r) build-essential dkms&amp;quot;,
      &amp;quot;apt-get clean&amp;quot;,
      &amp;quot;mount -o loop VBoxGuestAdditions.iso /media/cdrom&amp;quot;,
      &amp;quot;sh /media/cdrom/VBoxLinuxAdditions.run&amp;quot;,
      &amp;quot;umount /media/cdrom&amp;quot;,
      &amp;quot;mkdir /home/vagrant/.ssh&amp;quot;,
      &amp;quot;mkdir /root/.ssh&amp;quot;,
      &amp;quot;wget -qO- https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&amp;quot;,
      &amp;quot;echo &#39;vagrant ALL=NOPASSWD:ALL&#39; &amp;gt; /tmp/vagrant&amp;quot;,
      &amp;quot;chmod 0440 /tmp/vagrant&amp;quot;,
      &amp;quot;mv /tmp/vagrant /etc/sudoers.d/&amp;quot;
    ]}],
  &amp;quot;post-processors&amp;quot;: [
  {
      &amp;quot;type&amp;quot;: &amp;quot;vagrant&amp;quot;,
      &amp;quot;override&amp;quot;: {
        &amp;quot;virtualbox&amp;quot;: {
          &amp;quot;output&amp;quot;: &amp;quot;utopic-x64-virtualbox.box&amp;quot;
        },
        &amp;quot;vmware&amp;quot;: {
          &amp;quot;output&amp;quot;: &amp;quot;utopic-x64-vmware.box&amp;quot;
        }
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This in turn calls a kickstart (yes kickstart on Ubuntu) file stored in the preseed folder. This looks like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;install
text

cdrom

lang en_US.UTF-8
keyboard us

network --device eth0 --bootproto dhcp

timezone --utc America/Chicago

zerombr
clearpart --all --initlabel
bootloader --location=mbr

part /boot --fstype=ext3 --size=256 --asprimary
part pv.01 --size=1024 --grow --asprimary
volgroup vg_root pv.01
logvol swap --fstype swap --name=lv_swap --vgname=vg_root --size=1024
logvol / --fstype=ext4 --name=lv_root --vgname=vg_root --size=1024 --grow

auth --enableshadow --enablemd5

# rootpw is vagrant
rootpw --iscrypted $1$dUDXSoA9$/bEOTiK9rmsVgccsYir8W0
user --disabled

firewall --disabled

skipx

reboot

%packages
ubuntu-minimal
openssh-server
openssh-client
wget
curl
git
man
vim
ntp

%post
apt-get update

apt-get upgrade -y linux-generic

update-grub

useradd -m -s /bin/bash vagrant
echo vagrant:vagrant | chpasswd

mkdir -m 0700 -p /home/vagrant/.ssh

curl https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub &amp;gt;&amp;gt; /home/vagrant/.ssh/authorized_keys

chmod 600 /home/vagrant/.ssh/authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh

echo &amp;quot;vagrant ALL=(ALL) NOPASSWD: ALL&amp;quot; &amp;gt;&amp;gt; /etc/sudoers

sed -i &#39;s/^PermitRootLogin without-password/PermitRootLogin yes/&#39; /etc/ssh/sshd_config

apt-get clean

rm -rf /tmp/*

rm -f /var/log/wtmp /var/log/btmp

history -c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once both files are in place and packer is installed, building the images is as simple as:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;packer build packer.json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will take a &lt;em&gt;long&lt;/em&gt; time, but it does eventually get there, and will produce two .box files in the output folders you specified in the packer.json. From there, you can upload them somewhere and have vagrantcloud make them available, as we have under &lt;code&gt;bunchc/utopic-x64&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;In this post we looked at how to use packer.io to build Vagrant boxes for both VMware Workstation / Fusion and Virtualbox.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Changing Jenkins Home Folder</title>
      <link>http://blog.codybunch.com/posts/2014-10-27-Changing-Jenkins-Home-Folder</link>
      <pubDate>Mon, 27 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-10-27-Changing-Jenkins-Home-Folder</guid>
      <description>

&lt;p&gt;Everything Jenkins does happens in the context of the jenkins user by default. While that sounds obvious, it has some interesting implications if you aren&amp;rsquo;t careful.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;In my homelab, I&amp;rsquo;ve installed 14.04 onto a 16gb usb key. This is a hold over from the days when it was an ESXi lab, but, it works for the most part. However, for things like downloading vagrant boxes and the like, one needs to mount external storage. Enter the problem: Jenkins sets itself up in /var/lib/jenkins by default, which lives on my very limited usb stick.&lt;/p&gt;

&lt;p&gt;This in turn means anytime Jenkins tried to &amp;lsquo;vagrant up&amp;rsquo; a thing, it would fill my root partition trying to store all the temporary files vagrant used. Whoops.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Changing the Jenkins Home Directory&lt;/h2&gt;

&lt;p&gt;There are a number of posts out there on how to do this. None of them, however, addressed the vagrant issue in particular. To do that, one has to hit it with a larger bat.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;First Change /etc/defaults&lt;/h3&gt;

&lt;p&gt;The first thing to do, is change how Jenkins thinks of itself. The most straight forward way I found was to change that in /etc/defaults/jenkins. This will be around line 23 or 25:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# jenkins home location
JENKINS_HOME=/new/location
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Then Change /etc/passwd&lt;/h3&gt;

&lt;p&gt;This is the step that was needed to fix the problem of Jenkins running vagrant and vagrant subsequently filling /:&lt;/p&gt;

&lt;p&gt;Change:
&lt;code&gt;jenkins:x:105:114:Jenkins,,,:/var/lib/jenkins:/bin/bash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To this:
&lt;code&gt;jenkins:x:105:114:Jenkins,,,:/new/location:/bin/bash&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;Finally Restart Jenkins&lt;/h3&gt;

&lt;p&gt;Now to make sure all the things stick:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo /etc/init.d/jenkins restart&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;In this post we showed you how to change the Jenkins home directory, and why it&amp;rsquo;s also important to change it in /etc/passwd.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ZeroVM - A ZeroCloud Lab</title>
      <link>http://blog.codybunch.com/posts/2014-10-23-ZeroVM---A-ZeroCloud-Lab</link>
      <pubDate>Thu, 23 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-10-23-ZeroVM---A-ZeroCloud-Lab</guid>
      <description>

&lt;p&gt;At this point we&amp;rsquo;re pretty far down the ZeroVM rabbit hole. We&amp;rsquo;ve covered quite a bit of ground to get to this stage as well. Specific to this post, you will want to know more about ZeroCloud. You can do that &lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-13-ZeroVM---Getting-Started-with-ZeroCloud&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Regarding getting up to speed on ZeroVM as I am, you will find the following useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-15-ZeroVM---Some-Background&#34;&gt;Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-16-ZeroVM---Security-Isolation-and-IO&#34;&gt;Isolation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-21-ZeroVM---IO--Channels/&#34;&gt;IO Operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-17-ZeroVM---Getting-Started-Again/&#34;&gt;Getting Started with ZeroVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-20-ZeroVM-Link-Dump&#34;&gt;Lots of ZeroVM Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Building The ZeroCloud Lab&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;There are a few ways of going about this, however before we get started, realize that this is still early days and if you find this post a few months or a year or two down the road, it will likely be super out of date.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To get working with ZeroCloud, the most straight forward path is to follow the directions in the ZeroVM Docs &lt;a href=&#34;http://docs.zerovm.org/zerocloud/devenv.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you&amp;rsquo;ve finished, you should have a functional ZeroCloud lab.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Experimenting in the ZeroCloud Lab&lt;/h2&gt;

&lt;p&gt;Having a lab up in running is one thing, but it&amp;rsquo;s rather boring thing by itself. So, let&amp;rsquo;s do something with it!&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;ZeroCloud Hello World Example&lt;/h3&gt;

&lt;p&gt;The first thing we&amp;rsquo;ll try to do, is a generic &amp;ldquo;Hello World&amp;rdquo; example, taken from &lt;a href=&#34;http://docs.zerovm.org/zerocloud/runningcode.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Log into the lab:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagrant ssh

cd devstack/
./rejoin-stack.sh
source /vagrant/adminrc

zpm auth
export OS_AUTH_TOKEN=PKIZ_Zrz_Qa5NJm44FWeF7Wp...
export OS_STORAGE_URL=http://127.0.0.1:8080/v1/AUTH_7fbcd8784f8843a180cf187bbb12e49c
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You will need to change the AUTH_TOKEN and STORAGE_URL values to match those returned by zpm auth.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Create our &amp;ldquo;Hello World&amp;rdquo; python file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt; example &amp;lt;&amp;lt;EOF
#!file://python2.7:python
import sys
print(&amp;quot;Hello from ZeroVM!&amp;quot;)
print(&amp;quot;sys.platform is &#39;%s&#39;&amp;quot; % sys.platform)
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Now we run the example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -i -X POST -H &amp;quot;X-Auth-Token: $OS_AUTH_TOKEN&amp;quot; \
  -H &amp;quot;X-Zerovm-Execute: 1.0&amp;quot; -H &amp;quot;Content-Type: application/python&amp;quot; \
  --data-binary @example $OS_STORAGE_URL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok, so what did we do then? In the first step we logged in to our lab, sourced a file that contains credentials for our environment, and then set some additional environment variables to store our auth token and swift url.&lt;/p&gt;

&lt;p&gt;Next we created the hello-world example file. In the absence of a text editor we just dumped everything between &amp;ldquo;&amp;lt;&amp;lt;EOF&amp;rdquo; and &amp;ldquo;EOF&amp;rdquo; into the file &amp;lsquo;example&amp;rsquo;. Note the first line in the file begins with &lt;code&gt;#!file://&lt;/code&gt;. This is important as it lets the parser know what to do with said file, in this case, fire up python.&lt;/p&gt;

&lt;p&gt;Finally, we use curl against our Swift install, letting it know to jump out to the ZeroVM middleware and that our application type is python. Additionally we specify our entire program as the payload in &lt;code&gt;--data-binary&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;In this post, we showed you how to build a ZeroCloud lab and run an example &amp;ldquo;Hello World&amp;rdquo; application within it. If you would like to explore some more complex applications, be sure to explore the various talks and videos &lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-20-ZeroVM-Link-Dump&#34;&gt;here.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ZeroVM - Getting Started with ZeroCloud</title>
      <link>http://blog.codybunch.com/posts/2014-10-22-ZeroVM---Getting-Started-with-ZeroCloud</link>
      <pubDate>Wed, 22 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://blog.codybunch.com/posts/2014-10-22-ZeroVM---Getting-Started-with-ZeroCloud</guid>
      <description>

&lt;p&gt;If you are getting up to speed on ZeroVM as I am, you will find the following useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-15-ZeroVM---Some-Background&#34;&gt;Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-16-ZeroVM---Security-Isolation-and-IO&#34;&gt;Isolation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-21-ZeroVM---IO--Channels/&#34;&gt;IO Operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-17-ZeroVM---Getting-Started-Again/&#34;&gt;Getting Started with ZeroVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codybunch.com/posts/2014-10-20-ZeroVM-Link-Dump&#34;&gt;Lots of ZeroVM Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, this &lt;a href=&#34;https://www.packtpub.com/books/content/mapreduce-openstack-swift-and-zerovm&#34;&gt;post&lt;/a&gt; does a great job of explaining how ZeroVM fits when you start to approach middling to large (Read: &lt;em&gt;Big Data&lt;/em&gt;) problems. Go read it now.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Getting Started with ZeroCloud&lt;/h2&gt;

&lt;p&gt;Now that you&amp;rsquo;ve read the &lt;a href=&#34;https://www.packtpub.com/books/content/mapreduce-openstack-swift-and-zerovm&#34;&gt;introduction by Lars&lt;/a&gt;, and I trust that you have, we can start looking into the &amp;lsquo;what&amp;rsquo; of ZeroCloud. In this post we&amp;rsquo;ll touch on it&amp;rsquo;s architecture and use case or two. In a subsequent post we&amp;rsquo;ll show you how to build your own small-scale lab for such an environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Also go here, watch &lt;a href=&#34;https://www.youtube.com/watch?v=VYZU_4w_dCA&#34;&gt;this&lt;/a&gt;, around the 16:30 mark, pay attention to the &amp;rsquo;t = data / Rate&amp;rsquo; bits.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is where things in ZeroVM start to get really cool.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;ZeroCloud Architecture&lt;/h3&gt;

&lt;p&gt;The best way to describe the what and how of ZeroCloud is with a few diagrams which we will then dive into. These are borrowed form slides in past presentations.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://openstack.prov12n.com/screens/1e1bd9b12a3230982c98-e2a0e10379dcd0e09ec354fba3ca6600.r72.cf1.rackcdn.comZeroCloud.pdf_2014-10-21_13-09-08.jpg&#34; alt=&#34;Highlevel ZeroCloud Architecture&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;This first diagram is a &lt;em&gt;hugely&lt;/em&gt; simplified view of a swift environment, that is, if you have worked with OpenStack Swift it should look familiar enough. The &amp;ldquo;Proxy&amp;rdquo; nodes at the top are Swift Proxies, the Storage Nodes below are well, object storage nodes.&lt;/p&gt;

&lt;p&gt;What changes for ZeroCloud is the addition of a few ZVM parts made available via Swift Middleware. In this case ZVM represents job brokers, some messaging, ZeroVM itself, as well as an &amp;lsquo;executor&amp;rsquo; that handles the connecting of channels and the reading / writing of objects in Swift. This next diagram breaks that down further:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://openstack.prov12n.com/screens/1e1bd9b12a3230982c98-e2a0e10379dcd0e09ec354fba3ca6600.r72.cf1.rackcdn.comZeroCloud.pdf_2014-10-21_13-10-12.jpg&#34; alt=&#34;ZeroCloud Dataflow Architecture&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;In this diagram, which admittedly is an eyechart, each step in the ZeroVM Swift Middleware is shown. Working left to right:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; The user initiates a job request via the Swift REST API by sending a post request with the code to be executed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; This hits the Swift Proxy node and is handed to the ZeroVM middleware, which, via a job scheduler finds where the closest replica of your data is, and sends the request along.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; The job arrives at the executor who then fires up a net-new ZeroVM session for the job, opens the required IO Channels to your file* and if needed other ZeroVM sessions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; The ZeroVM job, finished with it&amp;rsquo;s work, sends the response back up to the Proxy Server who then serves the response back to the user.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; re: file in #3, in the default configuration this is a net new copy of the file rather than the actual object itself. This prevents accidental damage to the file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;ZeroCloud Use Cases&lt;/h3&gt;

&lt;p&gt;So what do you do with a deterministic, computable, distributed data store? Some things that jump to mind are things like &amp;ldquo;A Giant MapReduce Cluster&amp;rdquo;, similar to the one described &lt;a href=&#34;https://www.packtpub.com/books/content/mapreduce-openstack-swift-and-zerovm&#34;&gt;here&lt;/a&gt;. As Lars describes, ZeroCloud can address one of the biggest MapReduce computational issues, that is data locality.&lt;/p&gt;

&lt;p&gt;In addition to MapReduce type workloads, what else can one do? One could couple ElasticSeach and Log Stash, and indeed serve Kibana directly from Zero Cloud. Video trans-coding is another use case that I&amp;rsquo;ve seen.&lt;/p&gt;

&lt;p&gt;ZeroVM/ZeroCloud then, works well when you have a data heavy workload that would benefit being attacked in a distributed fashion.&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;In this post we introduced you to ZeroCloud, the amalgamation of ZeroVM and OpenStack Swift. We dove into the architecture of ZeroCloud and introduced some use cases where having programmable distributed storage system is insanely useful.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>